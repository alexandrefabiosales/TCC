Conclusão
O modelo fez um bom trabalho no geral. Foi preciso na maioria das vezes, acertando em torno de 87,68% dos casos. 
Foi particularmente bom em dizer “sim” às pessoas certas, com cerca de 90,31% das respostas “sim” corretas. 
Também detectou muitos dos casos reais de “sim”, cerca de 96,12%. No entanto, teve um pouco de dificuldade em dizer “não” corretamente, 
com apenas 32,15% de suas respostas “não” acertadas. A pontuação geral, chamada de F1, foi de 93,12%, mostrando que se saiu bem em equilibrar tudo.

É importante lembrar que o conjunto de dados não foi balanceado, pois 87% dos clientes foram classificados como bons pagadores, 
enquanto apenas 13% foram considerados mau perfil. Além disso, o conjunto de dados continha apenas pessoas que realmente obtiveram o cartão,
 e não aquelas que foram inicialmente negadas por outros motivos, como dívidas não pagas. Isto pode afetar o desempenho do modelo em situações reais. 
 No futuro, seria uma boa ideia melhorar a capacidade do modelo de dizer “não” com mais precisão e considerar estes desequilíbrios, 
 ao mesmo tempo que melhora o modelo.
 
 
 
 
 
 
Conclusão
Categoria de clientes que devem ser visados:

Na faixa etária de 30 a 50 anos.
Clientes que trabalham há mais de 10 anos.
Clientes mulheres trabalhadoras.
Clientes com formação académica.
Clientes repetidos.



Conclusões
Nosso modelo foi desenvolvido com base em uma série de suposições. Primeiramente, desenvolvemos nossa própria métrica para chegar à variável alvo. 
Uma instituição financeira que deseje implementar nosso modelo para ajudar no processo de aprovação de cartão de crédito 
pode desenvolver sua própria métrica para categorizar o que constitui um solicitante "Bom" e "Mau".

A seguir, também formulamos nosso problema como querendo minimizar a taxa de verdadeiros negativos (TNR) e, 
ao mesmo tempo, maximizar a taxa de falsos negativos (FNR). Num cenário prático, a formulação do problema
pode ser diferente com base no montante dos lucros obtidos pela instituição financeira. Eles podem querer desconsiderar
 o FNR porque estão simplesmente interessados ​​em identificar todos os aplicativos “ruins”. Eles terão, portanto, que ajustar 
 os hiperparâmetros do nosso modelo.
 
 
Conclusão
Neste notebook, realizamos diferentes engenharia de recursos, transformações e métodos de sobreamostragem/redução de amostragem para treinar um modelo para classificar créditos bons/ruins com o conjunto de dados desequilibrado fornecido.
Para a seleção do modo, usamos a pontuação f05 como principal critério para lidar com esses dados desequilibrados.
Dos 4 modelos que tentamos treinar acima, Regressão Logística, KNN e RandomForest produzem resultados semelhantes para validação cruzada. Random Forest tem pontuação f05 mais baixa do que outras. Para potenciais necessidades futuras de inferência, selecionamos a Regressão Logística ajustada como modelo final. Em seguida, executamos a Regressão Logística com o conjunto de teste e ela produz um resultado semelhante à sua pontuação CV f05, que é cerca de 0,8.
A transformação WOE não apresentou muito efeito na Regressão Logística, provavelmente porque realizamos transformação apenas em variáveis ​​categóricas com cardinalidade inferior a 20, deixando de fora aquelas com alta cardinalidade e variável contínua.
 
Concluindo, acreditamos que nosso projeto atingiu os objetivos definidos em nossa Formulação de Problemas e que serve de base para o desenvolvimento de modelos mais complexos para enfrentar esta questão de Aprovação de Cartão de Crédito.


Conclusão
Randomforest com subamostragem fornece o melhor resultado para encontrar os dados minoritários. Com valor de recall de 0,67 para encontrar os clientes rejeitados é o maior deste projeto. Se o objetivo do banco é encontrar quem rejeitar, este modelo pode ser utilizado. No entanto, se o custo da rejeição incorrecta do cliente for demasiado elevado, outros métodos podem ser utilizados. Por exemplo, o Classificador de Árvore de Decisão sem reamostragem tem taxas de precisão mais altas. Devido à natureza desequilibrada dos dados, permite aceitar mais pedidos de cartão de crédito dos clientes. Com este modelo haverá mais clientes sendo aceitos para cartão de crédito, enquanto com randomforest com subamostragem haverá mais clientes rejeitados corretamente. Na fase de implementação estes resultados devem ser considerados.



Conclusão¶
O modelo foi fantástico na identificação de quais clientes aprovar, tendo precisão de 0,98 e pontuação f1 de 0,99, quase perfeita. No entanto, não foi bom em identificar quais clientes negar, tendo apenas uma precisão de 0,23 e uma pontuação f1 de 0,13. Isso pode ter surgido da falta de clientes negados no conjunto de dados, considerando que havia apenas 300, enquanto havia 14.693 clientes aprovados, tornando o modelo muito melhor na identificação de bons clientes. O modelo em si parece funcionar bem, mas, para ser utilizado de forma eficaz, seria necessário melhorar a capacidade de negar clientes, o que exigiria uma amostra maior de maus clientes com os quais aprender.



Conclusões
Nosso modelo foi desenvolvido com base em uma série de suposições. Primeiramente, desenvolvemos nossa própria métrica para chegar à variável alvo. Uma instituição financeira que deseje implementar nosso modelo para ajudar no processo de aprovação de cartão de crédito pode desenvolver sua própria métrica para categorizar o que constitui um solicitante "Bom" e "Mau".

A seguir, também formulamos nosso problema como querendo minimizar a taxa de verdadeiros negativos (TNR) e, ao mesmo tempo, maximizar a taxa de falsos negativos (FNR). Num cenário prático, a formulação do problema pode ser diferente com base no montante dos lucros obtidos pela instituição financeira. Eles podem querer desconsiderar o FNR porque estão simplesmente interessados ​​em identificar todos os aplicativos “ruins”. Eles terão, portanto, que ajustar os hiperparâmetros do nosso modelo.

Concluindo, acreditamos que nosso projeto atingiu os objetivos definidos em nossa Formulação de Problemas e que serve de base para o desenvolvimento de modelos mais complexos para enfrentar esta questão de Aprovação de Cartão de Crédito.